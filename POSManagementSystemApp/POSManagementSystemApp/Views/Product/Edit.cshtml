@model POSManagementSystem.Models.Models.Product

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="main-wrapper">
    <div class="row">
        <div class="col-md-10">
            <div class="panel panel-white">
                @*<h2>Add</h2>*@
                @using (Html.BeginForm())
            {
                    @Html.AntiForgeryToken()
                    @*<form class="form-horizontal">*@
                    <div class="panel-heading clearfix">
                        <h3 class="panel-title">Product Update Page</h3>
                    </div>
                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.ImagePath)
                        <div class="row">
                            <div class="col-md-10">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("CategoryId", null, new { @class = "form-control"})
                                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ReorderLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.ReorderLevel, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ReorderLevel, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Discription, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Discription, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Discription, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Update" class="btn btn-default" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <img src="@Url.Content(Model.ImagePath)" style="margin: 10px; width: 200px; height: 200px;" id="imagePreview" />
                                            <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>



                    </div>
                    @*</form>*@
                }
                <div>
                    <p style="margin-left: 10px;">@Html.ActionLink("Back to List", "Index")</p>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/scripts/plugins/jquery-validation/jquery.validate.js"></script>
